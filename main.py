import telebot
from telebot import types
from user import user_,password_,TOKEN
from sqlalchemy.orm import  sessionmaker
from rebut_tables import engine,translate_words,all_eng_words,rebut_table
from createDB import Word,User,UserStats
import random

Session=sessionmaker(bind=engine)
session=Session()

bot=telebot.TeleBot(TOKEN)


@bot.message_handler(commands=['start'])
def send_welcome(message):
    this_chat_id=message.chat.id
    markup=types.ReplyKeyboardMarkup(row_width=2)
    target_word_btn=types.KeyboardButton('/next')
    markup.add(target_word_btn)
    exist=session.query(User).filter(User.chat_id == this_chat_id).first()
    if not exist:
        user=User(chat_id=this_chat_id)
        session.add(user)
        session.commit()
        session.refresh(user)
        user_stats=UserStats(user_id=user.id)
        session.add(user_stats)
        for eng,ru in translate_words.items():
            words=Word(eng_word = eng,rus_word = ru,user_id=user.id)
            session.add(words)
        session.commit()
        session.refresh(words)
        session.refresh(user_stats)
    subq=session.query(User).filter(User.chat_id == this_chat_id).first()  #–¢—É—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¢–ï–ö–£–©–ï–ô —Å–µ—Å—Å–∏–∏
    words_list=session.query(Word).filter(Word.user_id==subq.id).all() #–°–ø–∏—Å–æ–∫!!!!! —Å–ª–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–æ–∑–≤–∞—Ç–µ–ª—è
    if len(words_list) < 1:
        for eng,ru in translate_words.items():
            words=Word(eng_word = eng,rus_word = ru,user_id=subq.id)
            session.add(words)
        session.commit()
    bot.send_message(this_chat_id,"–ü—Ä–∏–≤–µ—Ç üëã –î–∞–≤–∞–π –ø–æ–ø—Ä–∞–∫—Ç–∏–∫—É–µ–º—Å—è –≤ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ. –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –º–æ–∂–µ—à—å –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –≤ —É–¥–æ–±–Ω–æ–º –¥–ª—è —Å–µ–±—è —Ç–µ–º–ø–µ.",reply_markup=markup)


@bot.message_handler(commands=['next','–î–∞–ª—å—à–µ'])
def send_message(message):
    try:
        this_chat_id=message.chat.id
        subq=session.query(User).filter(User.chat_id == this_chat_id).first() #–¢—É—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¢–ï–ö–£–©–ï–ô —Å–µ—Å—Å–∏–∏
        words_list=session.query(Word).filter(Word.user_id==subq.id).all() #–°–ø–∏—Å–æ–∫!!!!! —Å–ª–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–æ–∑–≤–∞—Ç–µ–ª—è
        if len(words_list)==0:
            bot.send_message(this_chat_id,f'–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º,–≤—ã —É–≥–∞–¥–∞–ª–∏ –≤—Å–µ —Å–ª–æ–≤–∞ –ø–æ 5 —Ä–∞–∑.–≤–≤–µ–¥–∏—Ç–µ /start —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞')
            return
        else:
            subq.now_wordlist_index=random.randint(0, len(words_list) - 1) #–†–∞–Ω–¥–æ–º–Ω—ã–π –∏–Ω–¥–µ–∫—Å –¥–ª—è —Å–ª–æ–≤–∞—Ä—è
            markup=types.ReplyKeyboardMarkup(row_width=2)
            target_word=words_list[subq.now_wordlist_index].eng_word
            other_eng_words=[w for w in all_eng_words if w != target_word]
            other_three_words=random.sample(other_eng_words, 3)
            buttons=[target_word]+other_three_words
            random.shuffle(buttons)
            add_opc_but=['/–£–¥–∞–ª–∏—Ç—åüîô','/–î–∞–ª—å—à–µ','/–î–æ–±–∞–≤–∏—Ç—å_—Å–ª–æ–≤–æ‚ûï']
            markup.add(*buttons)
            markup.add(*add_opc_but)
            bot.send_message(this_chat_id,f'–£–≥–∞–¥–∞–π —Å–ª–æ–≤–æ "{words_list[subq.now_wordlist_index].rus_word}"',reply_markup=markup)
    except Exception as err:
        bot.send_message(this_chat_id,err)

@bot.message_handler(commands=['–î–æ–±–∞–≤–∏—Ç—å_—Å–ª–æ–≤–æ‚ûï'])
def add_word(message):
    msg=bot.send_message(message.chat.id,'–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ –∏ –ø–µ—Ä–µ–≤–æ–¥')
    bot.register_next_step_handler(msg,add_words)
    
@bot.message_handler(commands=['–£–¥–∞–ª–∏—Ç—åüîô'])
def delete_from_BD(message):
    try:
        this_chat_id=message.chat.id
        subq=session.query(User).filter(User.chat_id == this_chat_id).first()   #–¢—É—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¢–ï–ö–£–©–ï–ô —Å–µ—Å—Å–∏–∏
        words_list=session.query(Word).filter(Word.user_id==subq.id).all() #–°–ø–∏—Å–æ–∫!!!!! —Å–ª–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–æ–∑–≤–∞—Ç–µ–ª—è.—Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç—ã
        if words_list:
            del_word(words_list,subq,this_chat_id)
        else:
            bot.send_message(this_chat_id, "–ù–µ—Ç —Å–ª–æ–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è")
    except Exception as err:
        bot.send_message(this_chat_id,err)


@bot.message_handler(func=lambda message: message.text and not message.text.startswith('/'))
def chek_word(message):
    try:
        this_chat_id=message.chat.id
        subq=session.query(User).filter(User.chat_id == this_chat_id).first()   #–¢—É—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¢–ï–ö–£–©–ï–ô —Å–µ—Å—Å–∏–∏
        words_list=session.query(Word).filter(Word.user_id==subq.id).all() #–°–ø–∏—Å–æ–∫!!!!! —Å–ª–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–æ–∑–≤–∞—Ç–µ–ª—è.—Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç—ã
        stats=subq.stats[0] #–°—Ç–∞—Ç—É—Å—ã –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if words_list[subq.now_wordlist_index].eng_word==message.text:
            words_list[subq.now_wordlist_index].count+=1
            stats.correct_attempts +=1
            bot.send_message(this_chat_id,f'–ü—Ä–∞–≤–∏–ª—å–Ω–æ!!!—É–≥–∞–¥–∞–Ω–æ {stats.correct_attempts} —Å–ª–æ–≤')
            
            if  words_list[subq.now_wordlist_index].count == 5:
                bot.send_message(this_chat_id,f' –≤—ã —É–≥–∞–¥–∞–ª–∏ —Å–ª–æ–≤–æ "{words_list[subq.now_wordlist_index].rus_word}" 5 —Ä–∞–∑.')
                stats.words_learned += 1
                del_word(words_list,subq,this_chat_id)
            bot.send_message(this_chat_id, "–ù–∞–∂–º–∏—Ç–µ /–î–∞–ª—å—à–µ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–ª–æ–≤–∞")
            session.commit()
        else:
            bot.send_message(this_chat_id,f'–ù–µ–≤–µ—Ä–Ω–æ =(. –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.')
            bot.send_message(this_chat_id,f'–¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–ª–æ–≤—É –Ω–∞–∂–º–∏—Ç–µ /–î–∞–ª—å—à–µ')
            # bot.send_message(this_chat_id, "–ù–∞–∂–º–∏—Ç–µ /–î–∞–ª—å—à–µ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–ª–æ–≤–∞")
    except Exception as err:
        print(err)


def del_word(words_list,subq,this_chat_id):
    try:
        delete_word=words_list[subq.now_wordlist_index]
        ru_del_wrd=delete_word.rus_word
        session.delete(delete_word)
        session.commit()
        bot.send_message(this_chat_id,f'—Å–ª–æ–≤–æ "{ru_del_wrd}" —É–¥–∞–ª—è–µ—Ç—Å—è –∏–∑ –≤—ã–±–æ—Ä–∫–∏')
    except Exception as err:
         session.rollback()
         bot.send_message(this_chat_id,err)


def add_words(msg):
    text=msg.text
    if not text:
        bot.send_message(msg.chat.id, "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
        return
    list_text=text.split(' ', 1)
    user=session.query(User).filter(User.chat_id == msg.chat.id).first()#–¢—É—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¢–ï–ö–£–©–ï–ô —Å–µ—Å—Å–∏–∏
    try:
        words=Word(eng_word = list_text[0],rus_word = list_text[1],user_id=user.id)
        session.add(words)
        session.commit()
    except Exception as err:
        session.rollback()
        bot.send_message(msg.chat.id,f'"—Å–ª–æ–≤–∞ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã, –æ—à–∏–±–∫–∞ {err}"')
    #–î–û–ë–ê–í–õ–ï–ù–ò–ï –õ–û–ì–ò–ö–∏ –£–î–ê–õ–ï–ù–ò–Ø! 
    
    
if __name__=="__main__":
    print('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω')
    bot.polling()